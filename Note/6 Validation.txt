1-Validate in Front End 

In contact.html 

<input type="text" name="name" id="name" placeholder="Your Name" required="true"
                                        class="contact-input" />

<input type="email" name="email" id="email" placeholder="Your Email" required="true"
                                class="contact-input" />

we use : required="true

---------------------------------------------

But if someone it smarter so they can change at the FE page 

2- Spring validation : we put the annotation in the class or it mean we validate in out bean because it is the object in the java OOP 

Step by Step to create validation:

Step 1 : 

Add dependency : 

<dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-validation</artifactId>
    </dependency>

--------------------------------

In the class POJO class Contact model 

/*
    * @NotNull: Checks if a given field is not null but allows empty values & zero elements inside collections.
      @NotEmpty: Checks if a given field is not null and its size/length is greater than zero.
      @NotBlank: Checks if a given field is not null and trimmed length is greater than zero.
    * */
    @NotBlank(message="Name must not be blank")
    @Size(min=3, message="Name must be at least 3 characters long")
    private String name;

    @NotBlank(message="Mobile number must not be blank")
    @Pattern(regexp="(^$|[0-9]{10})",message = "Mobile number must be 10 digits")
    private String mobileNum;

    @NotBlank(message="Email must not be blank")
    @Email(message = "Please provide a valid email address" )
    private String email;

    @NotBlank(message="Subject must not be blank")
    @Size(min=5, message="Subject must be at least 5 characters long")
    private String subject;

    @NotBlank(message="Message must not be blank")
    @Size(min=10, message="Message must be at least 10 characters long")
    private String message;










































